#N canvas 54 32 1265 916 24;
#N canvas 40 135 1218 418 this_can_be_named_whatever 0;
#X obj 119 56 inlet;
#X obj 120 239 outlet;
#X obj 199 57 inlet~;
#X obj 200 240 outlet~;
#X text 352 37 This subpatch does nothing \, except pass the data in
and then out. Notice that there are two kinds of inlets and outlets
here. Ones with the ~ sign and ones without. This is an important distinction
that we'll get to later. The ~ sign marks the difference between an
object that works with audio signals vs. those that work control data.
You'll notice that the line connecting the audio signal objects is
bold. This is another way to tell the difference between control and
audio. In the parent window \, you'll also notice a difference in how
these inlets/outlets appear on the pd subpatch object (open or filled).
;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X restore 215 270 pd this_can_be_named_whatever;
#X text 171 75 Subpatches. In Pd you can make a subpatch with an object
called "pd." You simply create a new object called "pd" with a creation
argument of whatever you'd like to call the subpatch. To see the contents
\, just click once on it in Play mode.;
#X text 175 390 For many of the examples to follow \, there will be
subpatches nested within parent patches. Just click these in Play mode
to see the contents. Try making your own subpatch with inlets and outlets.
Subpathes help to keep things readable.;
#X obj 594 659 pddp/pddplink https://github.com/risd-cs/codedrop-pd-dmi
;
